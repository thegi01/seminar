window.onload = function(){ 

	/* 함수 코드(music) 실행 콘텍스트 */

	var obj = {price : 100};
	obj.music = function(one, two) {
		/*var one;
		console.log(one + two); 
		two = 77;
		console.log('two : ' + two);*/
		return one + two;
	}
	obj.music(10, 20);

	//4. 함수, 변수 바인딩

	//3. 변수 초기화
	param = {
		호출한 함수가 속한 오브젝트(obj), 
		함수 코드, 
		호출한 함수의 파라미터 값(10,20)
	}
	실행 컨텍스트 = {
		렉시컬 환경 컴포넌트 : {
			렉시컬 환경 : {
				환경 레코드 : {
					선언적 환경 레코드  : {
						one : 10,
						two : 77
					}
				},
				외부 렉시컬 환경 참조 : [[Scope]] 
			}
		},
		변수 환경 컴포넌트 : {
			렉시컬 환경 : {
				환경 레코드 : {
					선언적 환경 레코드  : {}
				},
				외부 렉시컬 환경 참조 : [[Scope]]
			}
		},
		this 바인딩 컴포넌트  : {
			price : 100,
			music : function(){}
		}
	}


	//2. 파라미터 값 매핑
	param = {
		호출한 함수가 속한 오브젝트(obj), 
		함수 코드, 
		호출한 함수의 파라미터 값(10,20)
	}
	실행 컨텍스트 = {
		렉시컬 환경 컴포넌트 : {
			렉시컬 환경 : {
				환경 레코드 : {
					선언적 환경 레코드  : {
						one : 10,
						two : 20
					}
				},
				외부 렉시컬 환경 참조 : [[Scope]] 
			}
		},
		변수 환경 컴포넌트 : {
			렉시컬 환경 : {
				환경 레코드 : {
					선언적 환경 레코드  : {}
				},
				외부 렉시컬 환경 참조 : [[Scope]]
			}
		},
		this 바인딩 컴포넌트  : {
			price : 100,
			music : function(){}
		}
	}


	// 1. 준비단계
	param = {
		호출한 함수가 속한 오브젝트(obj), 
		함수 코드, 
		호출한 함수의 파라미터 값(10,20)
	}
	실행 컨텍스트 = {
		렉시컬 환경 컴포넌트 : {
			렉시컬 환경 : {
				환경 레코드 : {
					선언적 환경 레코드  : {}
				},
				외부 렉시컬 환경 참조 : [[Scope]] 
			}
		},
		변수 환경 컴포넌트 : {
			렉시컬 환경 : {
				환경 레코드 : {
					선언적 환경 레코드  : {}
				},
				외부 렉시컬 환경 참조 : [[Scope]]
			}
		},
		this 바인딩 컴포넌트  : {
			price : 100,
			music : function(){}
		}/*,
		렉시컬 환경 : {
			환경 레코드 : {
				선언적 환경 레코드  : {}
			},
			외부 렉시컬 환경 참조 : [[Scope]] //호출한 함수 오브젝트(obj)의 Scope
		}*/
	}


	


}
